{"name": "测试进入显示>码流>清晰/流畅>I 帧间隔， 并验证配置文本和操作", "status": "failed", "statusDetails": {"message": "Failed: 当前页面缺失：1x", "trace": "self = <test_case.remote_setting.A_Basic_funcs.display.display_stream.test_display_stream.TestRemoteDisplay object at 0x0000023C86948A10>\ndevice_config = {'device_list_name': 'Duo 2V PoE', 'ipc': {'display': {'items': {'display': {'date': '日期(无需配置，有则保留无则删除)', 'day_and_nig...cker': True, 'brightness': '亮度', 'brightness_sync': False, 'contrast': '对比度', ...}, ...}}}}, 'uid': '952700Y006V71KIP'}\n\n    @pytest.mark.parametrize(\"device_config\", devices_config)\n    @allure.feature(\"显示>码流>清晰/流畅>I 帧间隔\")\n    @allure.story(\"需人工核查日志和录屏\")\n    @allure.title(\"测试进入显示>码流>清晰/流畅>I 帧间隔， 并验证配置文本和操作\")\n    def test_remote_stream_i_interval(self, device_config):\n        # 检查键是否存在，存在则执行当前用例，否则跳过\n        remote_items = device_config['ipc']['display']['items']['display']['stream']\n        BasePage().check_key_in_yaml(remote_items, 'clear')\n    \n        remote_items1 = device_config['ipc']['display']['items']['display']['stream']['clear']\n        BasePage().check_key_in_yaml(remote_items1, 'i_frame_interval')\n    \n        # 启动app，并开启录屏\n        driver.start_app(True)\n    \n        # 设备列表中滚动查找到单机、nvr、hub并进入远程配置，在远程设置主页点击‘显示’菜单项进入显示页\n        RemoteSetting().access_in_display(device_list_name=device_config['device_list_name'])\n    \n        # 点击进入码流主页\n        RemoteDisplay().access_in_stream()\n    \n        # 测试清晰/流畅 的I帧间隔\n>       RemoteDisplay().verify_stream_i_frame_interval(\n                        clear_i_options=remote_items['clear']['i_frame_interval']['options'],\n                        fluent_i_options=remote_items['fluent']['i_frame_interval']['options'])\n\ntest_case\\remote_setting\\A_Basic_funcs\\display\\display_stream\\test_display_stream.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\rn_device_setting_page\\remote_display.py:1485: in verify_stream_i_frame_interval\n    self.verify_stream_clear_i_frame_interval(clear_i_options)\npages\\rn_device_setting_page\\remote_display.py:1405: in verify_stream_clear_i_frame_interval\n    self.iterate_and_click_popup_text(option_text_list=custom_options, menu_text='I 帧间隔')\npages\\base_page.py:691: in iterate_and_click_popup_text\n    page_options = scroll_check_function(i)  # 断言\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntexts = '1x'\n\n    def scroll_check_function(texts):\n        \"\"\"\n        遍历并判断功能项(名称)是否存在当前页面\n        :param texts: 存储了功能项名称的列表。\n        :return: bool\n        \"\"\"\n        ele_exists = []\n        ele_not_exists = []\n    \n        # 定义一个函数来处理文本内容\n        def remove_default_keyword(remove_text):\n            if \"(默认)\" in remove_text:\n                return remove_text.replace(\"(默认)\", \"\").strip()\n            else:\n                return remove_text\n    \n        if isinstance(texts, list):\n            # 如果 texts 是一个列表，遍历列表中的每个功能项名称\n            for text in texts:\n                check_text = remove_default_keyword(text)\n                ele_status = self.is_element_exists(check_text)\n                if ele_status:\n                    ele_exists.append(check_text)\n                else:\n                    ele_not_exists.append(check_text)\n    \n            if len(ele_not_exists) > 0:\n                logger.info(f\"当前页面存在：{ele_exists}\")\n                logger.info(f\"当前页面缺失：{ele_not_exists}\")\n                pytest.fail(f\"当前页面缺失：{ele_not_exists}\")\n                # return False\n            else:\n                logger.info(f\"需校验的文本均存在！-->{ele_exists}\")\n                return True\n    \n        elif isinstance(texts, str):\n            # 如果 texts 是一个单一的文本，在当前页面滚动查找该文本是否存在\n            check_text = remove_default_keyword(texts)\n            ele_status = self.is_element_exists(check_text)\n            if not ele_status:\n                logger.info(f\"当前页面缺失：{check_text}\")\n>               pytest.fail(f\"当前页面缺失：{check_text}\")\nE               Failed: 当前页面缺失：1x\n\npages\\base_page.py:677: Failed"}, "attachments": [{"name": "自动截图", "source": "ad2d2164-da6e-46d7-8653-35d3cae8926a-attachment.png", "type": "image/png"}, {"name": "2024-12-25_20-07-26.mp4", "source": "5a6d429e-a3db-40f3-8c4a-841608b456d6-attachment.mp4", "type": "video/mp4"}, {"name": "log", "source": "222547ff-c2a1-4495-9b11-d8e933bd4360-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "device_config", "value": "{'device_list_name': 'Duo 2V PoE', 'uid': '952700Y006V71KIP', 'ipc': {'display': {'items': {'display': {'text': ['码流', '设备名称', '日期', '水印', '图像设置', '白天和黑夜', '遮盖区域', '拼接设置'], 'options': ['码流', '设备名称', '日期', '水印', '图像设置', '白天和黑夜', '遮盖区域', '拼接设置'], 'date': '日期(无需配置，有则保留无则删除)', 'watermark': '水印', 'device_name': '设备名称(无需配置，有则保留无则删除)', 'splice_region': '拼接设置', 'day_and_night': {'black_and_white': {'desc': '白天和黑夜>黑白', 'name': '黑白', 'options': ['自动', '手动', '亮度', '暗部'], 'text': ['黑白', '自动', '手动', '亮度', '恢复默认值', '暗部', '0', '255']}, 'day_color': {'desc': '白天和黑夜>白天彩色', 'name': '白天彩色', 'options': ['自动', '手动', '亮度', '暗部'], 'text': ['白天彩色', '自动', '手动', '亮度', '恢复默认值', '暗部', '0', '255']}, 'desc': '白天和黑夜', 'mode_switching': {'desc': '白天和黑夜>模式切换', 'name': '模式切换', 'options': ['黑白', '彩色', '自动', '日夜切换阈值'], 'text': ['模式切换', '黑白', '彩色', '自动', '光线较亮时自动显示彩色，较暗时自动显示黑白。', '日夜切换阈值', '白天和黑夜自动模式下，黑白彩色切换的环境亮度阈值：', '恢复默认值', '0', '100']}, 'name': '白天和黑夜', 'night_vision_color': {'desc': '白天和黑夜>夜视彩色', 'name': '夜视彩色', 'options': ['自动', '手动', '亮度', '暗部'], 'text': ['夜视彩色', '自动', '手动', '亮度', '恢复默认值', '暗部', '0', '255']}, 'options': ['模式切换', '黑白', '白天彩色', '夜视彩色'], 'text': ['白天和黑夜', '模式切换', '高光/阴影调节', '黑白', '白天彩色', '夜视彩色']}, 'image_setting': {'name': '图像设置(只需要确认亮度同步/hdr/夜视通透模式/抗闪烁)', 'brightness': '亮度', 'contrast': '对比度', 'saturation': '饱和度', 'sharpness': '锐度', 'brightness_sync': False, 'hdr': False, 'night_transparent_vision': False, 'anti_flicker': True}, 'private_mark': {'name': '遮盖区域', 'desc': '设置>显示>遮盖区域', 'type': 'navigation', 'camera_type': 'DM', 'mask_num': 4}, 'stream': {'text': ['I 帧间隔', '编码格式'], 'options': ['帧率控制', '码率模式'], 'clear': {'text': ['编码格式', 'I 帧间隔'], 'frame_rate': {'desc': '设置>显示>码流>码流>清晰>帧率(FPS)', 'name': '帧率(FPS)', 'options': ['20(默认)', '18', '16', '15', '12', '10', '8', '6']}, 'i_frame_interval': {'desc': '设置>显示>码流>码流>清晰>I 帧间隔', 'name': 'I 帧间隔', 'options': ['1x', '2x']}, 'max_bit_rate': {'desc': '设置>显示>码流>码流>清晰>最大码率(Kbps)', 'name': '最大码率(Kbps)', 'options': ['3072', '4096', '5120', '6144', '7168(默认)', '8192', '9216']}, 'resolution': {'desc': '设置>显示>码流>码流>清晰>分辨率', 'name': '分辨率', 'options': ['5120*1552', '4096*1248']}}, 'fluent': {'text': ['编码格式', 'I 帧间隔'], 'frame_rate': {'desc': '设置>显示>码流>码流>流畅>帧率(FPS)', 'name': '帧率(FPS)', 'options': ['20(默认)', '15', '10', '7', '4']}, 'i_frame_interval': {'desc': '设置>显示>码流>码流>流畅>I 帧间隔', 'name': 'I 帧间隔', 'options': ['1x', '2x', '3x', '4x']}, 'max_bit_rate': {'desc': '设置>显示>码流>码流>流畅>最大码率(Kbps)', 'options': ['256', '512', '1024(默认)', '1536', '2048']}, 'resolution': {'desc': '设置>显示>码流>码流>流畅>分辨率', 'name': '分辨率', 'options': ['1920*576']}}, 'frame_rate_mode': {'desc': '设置>显示>码流>码流>帧率控制', 'name': '帧率控制', 'options': ['自动', '恒定']}, 'rate_mode': {'desc': '设置>显示>码流>码流>码率模式', 'name': '码率模式'}}}}}}}"}], "start": 1735128446098, "stop": 1735128547975, "uuid": "bf5d207a-9b86-4e66-b6b9-13e9ad70fadc", "historyId": "17119eba1d287068e59b34524d20aed2", "testCaseId": "670d9b68b3e650fcbd6d373ca4baee9e", "fullName": "test_case.remote_setting.A_Basic_funcs.display.display_stream.test_display_stream.TestRemoteDisplay#test_remote_stream_i_interval", "labels": [{"name": "story", "value": "需人工核查日志和录屏"}, {"name": "feature", "value": "显示>码流>清晰/流畅>I 帧间隔"}, {"name": "epic", "value": "远程配置>常规设置>显示"}, {"name": "parentSuite", "value": "test_case.remote_setting.A_Basic_funcs.display.display_stream"}, {"name": "suite", "value": "test_display_stream"}, {"name": "subSuite", "value": "TestRemoteDisplay"}, {"name": "host", "value": "DESKTOP-EM0UR5M"}, {"name": "thread", "value": "23496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.remote_setting.A_Basic_funcs.display.display_stream.test_display_stream"}]}